name: "Auto Release"

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"

jobs:
  auto-release:
    name: "Automatic Release"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Incrementar a numeração da tag"
        id: increment-tag
        run: |
          # Obtém a última tag
          last_tag=$(git describe --abbrev=0 --tags)
          # Incrementa a numeração da tag
          new_tag=$(echo $last_tag | awk -F'.' '{$NF = $NF + 1;} 1' OFS='.')
          echo "::set-output name=new_tag::$new_tag"

      - name: "Build & test"
        run: |
          # Seus comandos de build e teste aqui
          echo "Build e teste completos com sucesso!"

      - name: "Generate Changelog and Release"
        id: release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: ${{ steps.increment-tag.outputs.new_tag }}
          title: "Development Build"
          files: |
            *.*

      - name: "Generate and Upload Changelog"
        if: steps.release.outputs.automatic_releases_tag != ''
        run: |
          # Gerar changelog a partir dos commits
          changelog=$(git log --pretty=format:"- %s (%h)" $(git describe --abbrev=0 --tags $(git describe --abbrev=0 --tags --abbrev=0..HEAD))..HEAD)

          # Atualizar notas de lançamento
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.release.outputs.automatic_releases_tag }} \
            -d '{"body": "'"$changelog"'"}'
