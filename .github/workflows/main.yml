name: update readme and deploy new release

on:
  push:
    branches: 
      - master
    tags:
      - '[0-9]+.*'
  schedule:
    - cron: "*/15 * * * *" # 15 minutes update quote/link/info

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v3

      - name: config python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: readme update
        run: python update_readme.py

      - name: Get last tag
        id: get_last_tag
        run: |
          last_tag=$(git describe --abbrev=0 --tags)
          echo "::set-output name=last_tag::$last_tag"

      - name: Extract version number
        id: extract_version
        run: |
          IFS='.' read -ra VERSION <<< "${{ steps.get_last_tag.outputs.last_tag }}"
          major="${VERSION[0]}"
          minor="${VERSION[1]}"
          patch="${VERSION[2]}"
          echo "::set-output name=major::$major"
          echo "::set-output name=minor::$minor"
          echo "::set-output name=patch::$patch"

      - name: Increment minor version
        id: increment_minor
        run: echo "::set-output name=minor::$((${{ steps.extract_version.outputs.minor }} + 1))"

      - name: Create new tag
        id: create_new_tag
        run: |
          new_tag="${{ steps.extract_version.outputs.major }}.${{ steps.increment_minor.outputs.minor }}.${{ steps.extract_version.outputs.patch }}"
          echo "::set-output name=new_tag::$new_tag"

      - name: "Build & test"
        run: |
          echo "done!"
          
      - name: "Generate changelog and create release"
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.create_new_tag.outputs.new_tag }}"
          prerelease: false
          title: "Last build: ${{ github.sha }}"
          files: |
            *

      - name: commit readme
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add README.md
          git commit -am "update info/link/quote, idk"
          git push --all -f https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
