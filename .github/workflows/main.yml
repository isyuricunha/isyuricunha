name: update readme and deploy new release

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.*'
  schedule:
    - cron: "*/15 * * * *" # 15 minutes update quote/link/info

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Update readme
        run: python update_readme.py

      - name: Commit changes
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add README.md
          git commit -m "Update info/link/quote"
          git push
      
      - name: Determine tag name
        id: tag_name
        run: |
          if [ "${{ github.event_name }}" == 'push' ] && [ "${{ github.ref }}" == 'refs/heads/master' ]; then
            echo "v${{ github.run_number }}";
          else
            echo "${{ github.ref }}";
          fi
        shell: bash
      
      - name: Determine release name
        id: release_name
        run: |
          if [ "${{ github.event_name }}" == 'push' ] && [ "${{ github.ref }}" == 'refs/heads/master' ]; then
            echo "Release v${{ github.run_number }}";
          else
            echo "${{ github.ref }}";
          fi
        shell: bash
      
      - name: Check if tag exists
        id: check_tag
        run: echo ::set-output name=tag_exists::$(if [ "${{ github.event_name }}" == 'push' ] && [ "${{ github.ref_type }}" == 'tag' ]; then echo "true"; else echo "false"; fi)
        
      - name: Generate changelog and create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_name.outputs.stdout }}
          name: ${{ steps.release_name.outputs.stdout }}
          body: |
            Changes in this release:
            - Update readme
          draft: false
        if: steps.check_tag.outputs.tag_exists == 'true'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-artifact
          path: '*' # Include all files in the release artifact
